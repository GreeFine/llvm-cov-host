name: Coverage & Uploading reports

on:
  push:
    branches: ["main"]
    paths:
      - "src/**"
      - "Cargo*"
      - ".github/workflows/coverage.yml"
  pull_request:
    branches: ["main"]
    types: [ready_for_review, opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  coverage:
    if: github.event.pull_request.draft == false
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-cargo-
      - name: Set up toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: llvm-tools
      - name: Install cargo--llvm-cov
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-llvm-cov
      - name: Run tests and get coverage
        run: cargo llvm-cov --json > new-report.json
      - name: Prepare and send the coverage to the server
        id: coverage
        run: |
          sed -i '1s#^#{ "name": "'$(git rev-parse --abbrev-ref HEAD)'", "git": "'$(git remote get-url origin)'", "branch": "main", "json_report": #' new-report.json
          echo '}' >> new-report.json
          json_report=$(curl -X PUT \
            -H "Content-type: application/json" \
            -H "x-api-key: ${{ secrets.API_KEY }}" \
            -d "@new-report.json" \
            https://llvm-cov-host.greefine.fr/report)
          echo "{json_report}"
          echo "json_report=$json_report" >> "$GITHUB_OUTPUT"
      - name: Comment PR with report result
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            __Code coverage result:__ **base**=${{ fromJson(steps.coverage.outputs.json_report).base }}, **difference**=${{ fromJson(steps.coverage.outputs.json_report).diff }}
          comment_tag: execution
